import React from 'react'

export const MovieSecrets = () => {
    const newsText = `Despite steep competition from all sides, Hogwarts Legacy is clinging onto to its title of the best-selling game of the year.
    Since its release earlier this year, Hogwarts Legacy’s popularity hasn’t dwindled, as thousands of Harry Potter fans are still playing the game on several platforms, including Xbox, PlayStation and PC.
    Players have had a blast exploring the famous School of Witchcraft and Wizardry, and many have been hard at work adding their own features to the game via mods. These range from simple gameplay enhancements to online multiplayer tests and the bizarre, but hilarious, choice of turning all the wands into guns.
    Over $1 billion has been generated by the game so far, meaning it’s making more than the Harry Potter films, so you can expect some sequels moving forward with many fans already pitching ideas for a second game. While the sales so far have been impressive, they’ll likely rise to even greater heights later this year when the Nintendo Switch version launches. The Switch port has faced several delays in its development, but it’ll hopefully be smooth sailing now till its release date.
    The final cherry on top for Hogwarts Legacy comes from it being the best-selling game of the year, a position it doesn’t seem to be giving up despite competition from other AAA releases. So far, several big games have been released, such as The Legend Of Zelda: Tears of the Kingdom, Resident Evil 4 (2023) and Star Wars Jedi: Survivor to name a few.
    That being said, Hogwarts Legacy isn’t out of the woods yet, as it’ll still have to contend with some major titles coming out later this year, like Starfield, Marvel’s Spider-Man 2 and Mortal Kombat 1.`;

    const maxLength = 150;

    return (
        <div className='newsContainer'>
            <h4>Potter Series</h4>
            <div className='backgroundImageMovie'>
                <div className='text'>
                    <div className='textDetail'>
                        {newsText.length > maxLength
                            ? `${newsText.slice(0, maxLength)}...`
                            : newsText}
                    </div>
                    <button>Read More</button>
                </div>
            </div>
        </div>
    );

}
